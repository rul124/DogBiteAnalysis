[["index.html", "Dog Bite Accident Analysis Chapter 1 Introduction", " Dog Bite Accident Analysis Xiaorui Qin, Ziyu Fang, Ruoxi Liu 2021-11-18 Chapter 1 Introduction "],["data-sources.html", "Chapter 2 Data sources", " Chapter 2 Data sources "],["data-transformation.html", "Chapter 3 Data transformation", " Chapter 3 Data transformation "],["missing-values.html", "Chapter 4 Missing values", " Chapter 4 Missing values 4.0.1 Read the data We analyze the missing values of our data “Dog Bite Data” from https://data.cityofnewyork.us/Health/DOHMH-Dog-Bite-Data/rsgh-akpg, which contains 10280 rows and 9 columns. We read the data and show the names of the 9 columns for analysis. library(ggplot2) library(dplyr) DogBite &lt;- read.csv(&quot;DOHMH_Dog_Bite_Data.csv&quot;, header = TRUE, na.strings = c(&quot;&quot;)) colnames(DogBite) ## [1] &quot;UniqueID&quot; &quot;DateOfBite&quot; &quot;Species&quot; &quot;Breed&quot; ## [5] &quot;Age&quot; &quot;Gender&quot; &quot;SpayNeuter&quot; &quot;Borough&quot; ## [9] &quot;ZipCode&quot; 4.0.2 Missing values by column colSums(is.na(DogBite)) %&gt;% sort(decreasing = TRUE) ## Age ZipCode Breed UniqueID DateOfBite ## 4746 2664 1587 0 0 ## Species Gender SpayNeuter Borough ## 0 0 0 0 First, we show missing values by column. We could conclude that there are most missing values in “Age” while “ZipCode” and “Breed” come second and third. We can roughly analyze the possible reasons. Most of dog owners adopt or purchase their dogs, thus some of them may not be sure of the date of birth. Of course, dogs of some owners are born to the big dog at home, or they know the dogs’ birthday when they purchase them, but some owners are hard to know. This is a very common situation. In addition, many dog owners’ dogs may be hybrid breeds, or stray dogs adopted by owners. In these situations, owners may not be sure of the “breed” of their dogs. As for the “ZipCode”, dog bites may not always happen near the dog owners’ houses, so owners may not be familiar with the “ZipCode” there. Of course, many careful dog owners will inquire and fill in “ZipCode”, but others may not fill in it. All of other columns do not have any missing value. In class, Prof. Robbins mentioned that we could consider the connection between some columns, such as the address and the zipcode. In our data, we noticed that there is no connection of missing values between “ZipCode” and “Borough” according to the current analysis. We could not see any other connections right now. 4.0.3 Missing values by row Since we have 10280 rows, it is not clear if we continue analyzing with all of the data. Our data only contains one file, thus we randomly select 40 rows for analysis. sampleDogBite &lt;- sample_n(DogBite, 40) rowSums(is.na(sampleDogBite)) %&gt;% sort(decreasing = TRUE) ## [1] 3 3 3 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 ## [31] 0 0 0 0 0 0 0 0 0 0 Then we show missing values by row from large to small. We found that rows with the most missing values miss 3 values (i.e, “Age”, “ZipCode”, and “Breed”), while rows with the least missing values miss 0 value. There are only a small part of events in which all three values are missing. 4.0.4 Row / column missing patterns - heatmap library(tidyverse) tidyDogBite &lt;- sampleDogBite %&gt;% rownames_to_column(&quot;id&quot;) %&gt;% gather(key, value, -id) %&gt;% mutate(missing = ifelse(is.na(value), &quot;yes&quot;, &quot;no&quot;)) ggplot(tidyDogBite, aes(x = key, y = fct_rev(id), fill = missing)) + geom_tile(color = &quot;white&quot;) + ggtitle(&quot;DogBite with NAs added&quot;) + scale_fill_viridis_d() + # discrete scale theme_bw() Now we could show the heatmap to analyze the row / column missing patterns and distributions of missing values. In our heatmap, we discover that the vast majority of rows that miss “breed” and “ZipCode” also miss “Age”. There are only 2 exceptions in our 40 sample rows. One possible reason is that the most easily unknown characteristic of dogs is “age”. If dog owners do not know the age of dogs when adopting or purchasing it, it will be difficult to know in the future. However, the “breed” information can be identified through later medical tests, and “ZipCode” can also be queried after the dog bite events. If not even the easily known information of “breed” and “ZipCode” is available, it indicates that the data has limited information about these dogs and dog bite events, so it is easy to miss “age”. 4.0.5 Row / column missing patterns - gg_miss_fct Since most columns of our dataset contain categorical data, it is not proper to analyze row / column missing patterns with mi::missing_data.frame() for heatmaps or with “geom_tile()” for missing values by variable as we discussed in class. In order to better analyze categorical data, we think “gg_miss_fct()” is a better choice. We choose three columns, i.e., “Gender”, “SpayNeuter”, and “Borough”, to analyze the patterns. The plots show the proportions of missing values in different categories of the certain column. Note that we use the entire dataset instead of our 40 samples in this part for better discussion. library(naniar) gg_miss_fct(x = DogBite, fct = Gender) In the plot, “F” denotes “Female”, “M” denotes “Male”, and “U” denotes “Unknown”. The plot shows that most events whose “Gender” is “Unknown” miss “Age”, and about half of these events miss “Breed” and “ZipCode”. However, few events whose “Gender” is “Male” or “Female” miss “Age”, “Breed”, and “ZipCode”, and there is no great difference between the patterns of “Male” and “Female”. We could analyze this situation. As we discussed above, the most easily unknown characteristic of dogs is “Age”. If dog owners do not know the age of dogs when adopting or purchasing it, it will be difficult to know in the future. Although “breed” and “ZipCode” are also easily be missed, they are a little easier to be obtained than “Age”. The “breed” information can be identified through later medical tests, and “ZipCode” can also be queried after the dog bite events. However, the “Gender” information can be identified through observations or medical tests easily. If in an event, we do not even know the gender of the dog, it indicates that the data has limited information about these dogs and dog bite events, it is easy to miss “Age”, “Breed”, and “ZipCode”, especially “Age”. In addition, there is not much difference between patterns of missing values in female and male dogs, since the gender will not influence the patterns. gg_miss_fct(x = DogBite, fct = SpayNeuter) In the plot, “false” and “true” denote the situation of SpayNeuter of dogs. The plot shows that most events whose “SpayNeuter” is “false” miss “Age”, and about half of these events miss “Breed” and “ZipCode”. However, few events whose “SpayNeuter” is “true” miss “Age”, “Breed”, and “ZipCode”. We could analyze this situation. As we discussed above, the most easily unknown characteristic of dogs is “Age”. If dog owners do not know the age of dogs when adopting or purchasing it, it will be difficult to know in the future. Although “breed” and “ZipCode” are also easily be missed, they are a little easier to be obtained than “Age”. The “breed” information can be identified through later medical tests, and “ZipCode” can also be queried after the dog bite events. If in an event, “SpayNeuter” is true, which means the dog is well taken care of and controlled, these careful dog owners are more likely to know the “Age”, “Breed”, and “ZipCode”. By contrast, when it is false, it is more likely to miss “Age”, “Breed”, and “ZipCode”, especially “Age”. gg_miss_fct(x = DogBite, fct = Borough) The plot denotes the patterns of missing values in different boroughs. The plot shows that whatever the borough is, it is more likely to miss “Age” than “Breed” and “ZipCode”, which is consistent with what we discussed above. There is one exception. When the “Borough” is “Other”, i.e., we do not know the specific borough, 50% of events miss “ZipCode”. This is reasonable and Prof. Robbins also gave a similar example in class. Since both of “Borough” and “ZipCode” contain the information of the address, there is the connection between them. When we do not know the specific borough, it is likely to miss “ZipCode”. 4.0.6 Missing patterns x &lt;- mi::missing_data.frame(sampleDogBite) ## NOTE: In the following pairs of variables, the missingness pattern of the first is a subset of the second. ## Please verify whether they are in fact logically distinct variables. ## [,1] [,2] ## [1,] &quot;Breed&quot; &quot;Age&quot; ## [2,] &quot;Breed&quot; &quot;ZipCode&quot; class(x) ## [1] &quot;missing_data.frame&quot; ## attr(,&quot;package&quot;) ## [1] &quot;mi&quot; x@patterns ## [1] nothing nothing ZipCode ## [4] nothing Age, ZipCode Age, ZipCode ## [7] Breed, Age, ZipCode nothing nothing ## [10] Age, ZipCode Age nothing ## [13] nothing nothing nothing ## [16] Age ZipCode ZipCode ## [19] Breed, Age, ZipCode ZipCode nothing ## [22] nothing Age Age, ZipCode ## [25] Age, ZipCode Age, ZipCode nothing ## [28] Age Breed, Age, ZipCode Age, ZipCode ## [31] Age, ZipCode nothing nothing ## [34] Age, ZipCode Age nothing ## [37] Age nothing Age ## [40] nothing ## 5 Levels: nothing ZipCode Age ... Breed, Age, ZipCode This part lists the situation of missing values of our 40 samples. Each one indicates the kinds of values that are missed in each sample. levels(x@patterns) ## [1] &quot;nothing&quot; &quot;ZipCode&quot; ## [3] &quot;Age&quot; &quot;Age, ZipCode&quot; ## [5] &quot;Breed, Age, ZipCode&quot; This part lists all of the patterns above. summary(x@patterns) ## nothing ZipCode Age ## 17 4 7 ## Age, ZipCode Breed, Age, ZipCode ## 9 3 This part shows the specific counts of patterns above. Then, we aim to create a missing values plot in the style of extracat::visna() (no longer available on CRAN) using ggplot2. First, we create the function for creating missing plots. plot_missing &lt;- function(dataset, percent = TRUE) { library(cowplot) ###### for right plot ###### missing_patterns &lt;- data.frame(is.na(dataset)) %&gt;% group_by_all() %&gt;% count(name = &quot;count&quot;, sort = TRUE) %&gt;% ungroup() missing_patterns &lt;- missing_patterns %&gt;% mutate(pattern = 1:nrow(missing_patterns)) %&gt;% mutate(pattern = fct_reorder(as.factor(pattern), count))%&gt;% mutate(alpha = ifelse( rowSums(missing_patterns[, -ncol(missing_patterns)]) == 0, &quot;dark&quot;, &quot;light&quot;)) missing_patterns$pattern &lt;- factor(missing_patterns$pattern, levels = nrow(missing_patterns):1) ###### for up plot ###### dataset1 &lt;- dataset %&gt;% rownames_to_column(&quot;id&quot;) %&gt;% gather(&quot;feature&quot;, &quot;value&quot;, -id) %&gt;% mutate(missing = ifelse(is.na(value), 1, 0)) missing_row &lt;- dataset1 %&gt;% group_by(feature) %&gt;% summarise(n = sum(missing)) %&gt;% mutate(feature = fct_reorder(feature, n)) missing_row$feature &lt;- factor(missing_row$feature, rev(levels(missing_row$feature))) ###### for middle plot ###### dataset2 &lt;- missing_patterns %&gt;% select(-count, -pattern) %&gt;% rownames_to_column(&quot;id&quot;) %&gt;% gather(&quot;feature&quot;, &quot;value&quot;, -c(id, alpha)) dataset2$id &lt;- factor(dataset2$id, levels = nrow(missing_patterns):1) dataset2$feature &lt;- factor(dataset2$feature, levels = levels(missing_row$feature)) middle &lt;- dataset2 %&gt;% ggplot(aes(x = feature, y = id, fill = value, alpha = alpha)) + geom_tile(color = &quot;white&quot;) + scale_fill_manual(values = c(&quot;grey&quot;, &quot;purple&quot;), guide = &quot;none&quot;) + labs(x = &quot;variable&quot;, y = &quot;missing patterns&quot;) + scale_alpha_manual(values = c(2, .5), guide = &quot;none&quot;) + annotate(&quot;text&quot;, x = rep(6, sum(missing_patterns$alpha == &quot;dark&quot;)), y = length(missing_patterns$alpha) - which(missing_patterns$alpha == &quot;dark&quot;) + 1, label = rep(&quot;complete cases&quot;, sum(missing_patterns$alpha == &quot;dark&quot;)) ) + theme(axis.text.x = element_text(vjust = .5, hjust = .5, angle = 45)) if(percent == FALSE) { right &lt;- missing_patterns %&gt;% ggplot(aes(y=count, x=pattern, alpha = alpha)) + geom_bar(stat = &quot;identity&quot;, fill = &quot;lightblue&quot;) + theme_bw() + labs(x = &quot;&quot;, y = &quot;row count&quot;) + coord_flip() + scale_alpha_manual(values = c(2, .5), guide = &quot;none&quot;) up &lt;- missing_row %&gt;% ggplot(aes(x = feature, y = n)) + geom_bar(stat = &quot;identity&quot;, fill = &quot;lightblue&quot;) + theme_bw() + labs(x = &quot;&quot;, y = &quot;num rows missing&quot;, title = &quot;Missing value patterns&quot;) + theme(axis.text.x = element_text(vjust = 0.5, hjust = 0.5, angle = 45)) res = plot_grid(up, NULL, middle, right, rel_heights = c(1, 2), rel_widths = c(2, 1), align = &quot;hv&quot;) } else if (percent == TRUE) { right &lt;- missing_patterns %&gt;% ggplot(aes(y = count/sum(count) * 100, x = pattern, alpha = alpha)) + geom_bar(stat = &quot;identity&quot;, fill = &quot;lightblue&quot;) + theme_bw() + labs(x = &quot;&quot;, y = &quot;% rows&quot;, title = &quot;&quot;) + coord_flip() + scale_alpha_manual(values = c(2, .5), guide = &quot;none&quot;) up &lt;- missing_row %&gt;% ggplot(aes(x = feature, y = n/nrow(dataset)*100)) + geom_bar(stat = &quot;identity&quot;, fill = &quot;lightblue&quot;) + theme_bw() + labs(x = &quot;&quot;, y = &quot;num rows missing&quot;, title = &quot;Missing value patterns&quot;) + theme(axis.text.x = element_text(vjust = 0.5, hjust = 0.5, angle = 45)) res = plot_grid(up, NULL, middle, right, rel_heights = c(1, 2), rel_widths = c(3, 1), align = &quot;hv&quot;) } return(res) } Then we use the function to draw the plot. Note that we use the entire dataset instead of our 40 samples in this part for better discussion. DogBiteForPlot &lt;- subset(DogBite, select = -c(UniqueID)) plot_missing(DogBiteForPlot, percent = FALSE) First, we could analyze the left upper corner of this plot, which sorts the counts of rows that miss certain values. We found that there are most missing values in “Age” while “ZipCode” and “Breed” come second and third. All of other columns do not have any missing value. We can analyze the possible reasons. Most of dog owners adopt or purchase their dogs, thus some of them may not be sure of the date of birth. Of course, dogs of some owners are born to the big dog at home, or they know the dogs’ birthday when they purchase them, but some owners are hard to know. This is a very common situation. In addition, many dog owners’ dogs may be hybrid breeds, or stray dogs adopted by owners. In these situations, owners may not be sure of the “breed” of their dogs. As for the “ZipCode”, dog bites may not always happen near the dog owners’ houses, so owners may not be familiar with the “ZipCode” there. Of course, many careful dog owners will inquire and fill in “ZipCode”, but others may not fill in it. Second, we could analyze the left lower corner, which shows all of the patterns, i.e., miss nothing, only miss “Age”, miss “Age” and “ZipCode”, miss “Age” and “ZipCode” and “Breed”, only miss “ZipCode”, miss “Age” and “Breed”, only miss “Breed”, miss “ZipCode” and “Breed”. Third, we analyze the right lower corner, which sort the counts of 8 kinds of patterns we mentioned above. We could conclude that most events miss nothing. Events that only miss “Age” come second. Events that miss “Age” and “ZipCode” come third. Events that miss “ZipCode” and “Breed” is the least. We will analyze them separately. Most events miss nothing, which shows that the quality of our dataset is good. Many events only miss “Age”. As we discussed above, the most easily unknown characteristic of dogs is “Age”. If dog owners do not know the age of dogs when adopting or purchasing it, it will be difficult to know in the future. Although “breed” and “ZipCode” are also easily be missed, they are a little easier to be obtained than “Age”. The “breed” information can be identified through later medical tests, and “ZipCode” can also be queried after the dog bite events. Events that miss “Age” and “ZipCode” come third. As we mentioned above, “ZipCode” is easier to be obtained than “Age”. If in an event, we even do not know “ZipCode”, it indicates that the data has limited information about these dogs and dog bite events, it is easy to miss “Age”. In addition, this also indicate that “Breed” is easier to be obtained than “Age” and “ZipCode”, which is consistent with the left upper corner of this plot. Events that miss “ZipCode” and “Breed” is the least. As we mentioned above, the most easily unknown characteristic of dogs is “Age”. It is easier to obtain “Breed” and “ZipCode”. If we do not even know “Breed” and “ZipCode”, it is less likely to know “Age”. DogBiteForPlot &lt;- subset(DogBite, select = -c(UniqueID)) plot_missing(DogBiteForPlot, percent = TRUE) In this part, we draw a plot using our function, i.e., plot_missing(DogBiteForPlot, percent = TRUE). The situation is similar to the above plot from plot_missing(DogBiteForPlot, percent = FALSE). 4.0.7 Missing by borough percent_missing &lt;- DogBite %&gt;% group_by(Borough) %&gt;% summarize(num_bites = n(), num_na = sum(is.na(`Age`))) %&gt;% mutate(percent_na = round(num_na/num_bites, 2)) %&gt;% arrange(-percent_na) percent_missing ## # A tibble: 6 x 4 ## Borough num_bites num_na percent_na ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 Bronx 1757 888 0.51 ## 2 Manhattan 2354 1169 0.5 ## 3 Brooklyn 2281 1042 0.46 ## 4 Queens 2520 1079 0.43 ## 5 Staten Island 931 387 0.42 ## 6 Other 437 181 0.41 First, we show the percent of missing values of “Age” in different boroughs. Note that we use the entire dataset instead of our 40 samples in this part for better discussion. Events in “Bronx” is most likely to miss “Age”. There is not a large difference between the percent of different boroughs. percent_missing &lt;- DogBite %&gt;% group_by(Borough) %&gt;% summarize(num_bites = n(), num_na = sum(is.na(`Breed`))) %&gt;% mutate(percent_na = round(num_na/num_bites, 2)) %&gt;% arrange(-percent_na) percent_missing ## # A tibble: 6 x 4 ## Borough num_bites num_na percent_na ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 Other 437 100 0.23 ## 2 Manhattan 2354 484 0.21 ## 3 Bronx 1757 255 0.15 ## 4 Brooklyn 2281 343 0.15 ## 5 Queens 2520 331 0.13 ## 6 Staten Island 931 74 0.08 Now we show the percent of missing values of “Breed” in different boroughs. Events in “Other” is most likely to miss “Breed”. One possible reason is that according to our discussion above, there is a connection between “ZipCode” and “Borough”, which indicates that if we do not know the specific borough, it is more likely to miss “ZipCode”. If we do not even know “ZipCode”, it indicates that the data has limited information about these dogs and dog bite events, so it is easy to miss “Breed”. percent_missing &lt;- DogBite %&gt;% group_by(Borough) %&gt;% summarize(num_bites = n(), num_na = sum(is.na(`ZipCode`))) %&gt;% mutate(percent_na = round(num_na/num_bites, 2)) %&gt;% arrange(-percent_na) percent_missing ## # A tibble: 6 x 4 ## Borough num_bites num_na percent_na ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 Other 437 236 0.54 ## 2 Manhattan 2354 848 0.36 ## 3 Bronx 1757 463 0.26 ## 4 Staten Island 931 239 0.26 ## 5 Queens 2520 542 0.22 ## 6 Brooklyn 2281 336 0.15 Then we show the percent of missing values of “ZipCode” in different boroughs. Events in “Other” is most likely to miss “ZipCode”. One possible reason is that according to our discussion above, there is a connection between “ZipCode” and “Borough”, which indicates that if we do not know the specific borough, it is more likely to miss “ZipCode”. percent_missing &lt;- DogBite %&gt;% group_by(Borough) %&gt;% summarize(num_bites = n(), num_na = sum(is.na(`Age`))) %&gt;% mutate(percent_na = round(num_na/num_bites, 2)) %&gt;% arrange(-percent_na) DogBitesum &lt;- DogBite %&gt;% group_by(Borough) %&gt;% summarize(meanAge = round(mean(as.numeric(`Age`), na.rm = TRUE), 1)) %&gt;% left_join(percent_missing %&gt;% select(Borough, percent_na), by = &quot;Borough&quot;) %&gt;% arrange(desc(percent_na)) DogBitesum ## # A tibble: 6 x 3 ## Borough meanAge percent_na ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Bronx 4.2 0.51 ## 2 Manhattan 4.9 0.5 ## 3 Brooklyn 4.6 0.46 ## 4 Queens 4.7 0.43 ## 5 Staten Island 4.9 0.42 ## 6 Other 5.1 0.41 DogBitesumtidy &lt;- DogBitesum %&gt;% pivot_longer(cols = meanAge, names_to = &quot;subject&quot;, values_to = &quot;meanscore&quot;) ggplot(DogBitesumtidy, aes(meanscore, percent_na, color = Borough)) + geom_point(size = 2) + facet_wrap(~subject) + theme_bw() + theme(legend.position = &quot;bottom&quot;) We also explore the relationship between average age of dogs and the missing percent of “Age” in different boroughs. We could roughly infer that the smaller the average age is, the higher the missing percent of “Age” is. However, this relationship is not stable and not obvious. 4.0.8 Number of missing by year processed_DogBite &lt;- DogBite %&gt;% mutate(Year = case_when( str_detect(DogBite$DateOfBite, &quot;2015&quot;) ~ &quot;2015&quot;, str_detect(DogBite$DateOfBite, &quot;2016&quot;) ~ &quot;2016&quot;, str_detect(DogBite$DateOfBite, &quot;2017&quot;) ~ &quot;2017&quot; )) missing &lt;- processed_DogBite %&gt;% group_by(Year) %&gt;% summarise(sum.na = sum(is.na(Age))) ggplot(missing, aes(x = 1:3, y = sum.na)) + geom_col(color = &quot;blue&quot;, fill = &quot;lightblue&quot;) + scale_x_continuous(breaks = 1:3, labels = missing$Year) + ggtitle(&quot;Number of missing values by year&quot;) + xlab(&quot;&quot;) + ylab(&quot;Number of missing ages&quot;) + theme(axis.text.x = element_text(angle = 90)) missing &lt;- processed_DogBite %&gt;% group_by(Year) %&gt;% summarise(sum.na = sum(is.na(Breed))) ggplot(missing, aes(x = 1:3, y = sum.na)) + geom_col(color = &quot;blue&quot;, fill = &quot;lightblue&quot;) + scale_x_continuous(breaks = 1:3, labels = missing$Year) + ggtitle(&quot;Number of missing values by year&quot;) + xlab(&quot;&quot;) + ylab(&quot;Number of missing breeds&quot;) + theme(axis.text.x = element_text(angle = 90)) missing &lt;- processed_DogBite %&gt;% group_by(Year) %&gt;% summarise(sum.na = sum(is.na(ZipCode))) ggplot(missing, aes(x = 1:3, y = sum.na)) + geom_col(color = &quot;blue&quot;, fill = &quot;lightblue&quot;) + scale_x_continuous(breaks = 1:3, labels = missing$Year) + ggtitle(&quot;Number of missing values by year&quot;) + xlab(&quot;&quot;) + ylab(&quot;Number of missing ZipCodes&quot;) + theme(axis.text.x = element_text(angle = 90)) We process our data and show the number of missing values by year, i.e., 2015, 2016, and 2017. Note that we use the entire dataset instead of our 40 samples in this part for better discussion. We use three plots to show the situations of “Age”, “Breed”, and “ZipCode” separately. We could see that in all of the three plots, events in 2015 miss most values. From 2015 to 2017, the number of missing values gradually decreased in total (especially for “Breed”). However, we are not sure whether this is due to the optimization of management, or because the data contained in our dataset in 2015 is the most. Thus, we show the proportion of missing values by year then. missing &lt;- processed_DogBite %&gt;% group_by(Year) %&gt;% summarise(num = n(), sum.na = sum(is.na(Age))) %&gt;% mutate(percent_na = sum.na/num) ggplot(missing, aes(x = 1:3, y = percent_na)) + geom_col(color = &quot;blue&quot;, fill = &quot;lightblue&quot;) + scale_x_continuous(breaks = 1:3, labels = missing$Year) + ggtitle(&quot;Proportion of missing values by year&quot;) + xlab(&quot;&quot;) + ylab(&quot;Proportion of missing ages&quot;) + theme(axis.text.x = element_text(angle = 90)) missing &lt;- processed_DogBite %&gt;% group_by(Year) %&gt;% summarise(num = n(), sum.na = sum(is.na(Breed))) %&gt;% mutate(percent_na = sum.na/num) ggplot(missing, aes(x = 1:3, y = percent_na)) + geom_col(color = &quot;blue&quot;, fill = &quot;lightblue&quot;) + scale_x_continuous(breaks = 1:3, labels = missing$Year) + ggtitle(&quot;Proportion of missing values by year&quot;) + xlab(&quot;&quot;) + ylab(&quot;Proportion of missing breeds&quot;) + theme(axis.text.x = element_text(angle = 90)) missing &lt;- processed_DogBite %&gt;% group_by(Year) %&gt;% summarise(num = n(), sum.na = sum(is.na(ZipCode))) %&gt;% mutate(percent_na = sum.na/num) ggplot(missing, aes(x = 1:3, y = percent_na)) + geom_col(color = &quot;blue&quot;, fill = &quot;lightblue&quot;) + scale_x_continuous(breaks = 1:3, labels = missing$Year) + ggtitle(&quot;Proportion of missing values by year&quot;) + xlab(&quot;&quot;) + ylab(&quot;Proportion of missing ZipCodes&quot;) + theme(axis.text.x = element_text(angle = 90)) We found that in the proportion of missing values by year, it is clear that as time goes on, the proportion of missing value has a decreasing trend, especially for “Breed” and “ZipCode”. One possible reason is that the government has strengthened its management of dog bites and put forward higher requirements for data integrity. As a result, there are less missing values in 2017. 4.0.9 Number of missing by month processed_DogBite &lt;- DogBite %&gt;% mutate(Month = case_when( str_detect(DogBite$DateOfBite, &quot;January&quot;) ~ &quot;01&quot;, str_detect(DogBite$DateOfBite, &quot;February&quot;) ~ &quot;02&quot;, str_detect(DogBite$DateOfBite, &quot;March&quot;) ~ &quot;03&quot;, str_detect(DogBite$DateOfBite, &quot;April&quot;) ~ &quot;04&quot;, str_detect(DogBite$DateOfBite, &quot;May&quot;) ~ &quot;05&quot;, str_detect(DogBite$DateOfBite, &quot;June&quot;) ~ &quot;06&quot;, str_detect(DogBite$DateOfBite, &quot;July&quot;) ~ &quot;07&quot;, str_detect(DogBite$DateOfBite, &quot;August&quot;) ~ &quot;08&quot;, str_detect(DogBite$DateOfBite, &quot;September&quot;) ~ &quot;09&quot;, str_detect(DogBite$DateOfBite, &quot;October&quot;) ~ &quot;10&quot;, str_detect(DogBite$DateOfBite, &quot;November&quot;) ~ &quot;11&quot;, str_detect(DogBite$DateOfBite, &quot;December&quot;) ~ &quot;12&quot;)) %&gt;% mutate(Year = case_when( str_detect(DogBite$DateOfBite, &quot;2015&quot;) ~ &quot;2015&quot;, str_detect(DogBite$DateOfBite, &quot;2016&quot;) ~ &quot;2016&quot;, str_detect(DogBite$DateOfBite, &quot;2017&quot;) ~ &quot;2017&quot;)) processed_DogBite$CombinedDate &lt;- str_c(processed_DogBite$Year, &quot;-&quot;, processed_DogBite$Month) missing &lt;- processed_DogBite %&gt;% group_by(CombinedDate) %&gt;% summarise(sum.na = sum(is.na(Age))) %&gt;% arrange(CombinedDate) ggplot(missing, aes(x = 1:36, y = sum.na)) + geom_col(color = &quot;blue&quot;, fill = &quot;lightblue&quot;) + scale_x_continuous(breaks = 1:36, labels = missing$CombinedDate) + ggtitle(&quot;Number of missing values by month&quot;) + xlab(&quot;&quot;) + ylab(&quot;Number of missing ages&quot;) + theme(axis.text.x = element_text(angle = 90)) missing &lt;- processed_DogBite %&gt;% group_by(CombinedDate) %&gt;% summarise(sum.na = sum(is.na(Breed))) %&gt;% arrange(CombinedDate) ggplot(missing, aes(x = 1:36, y = sum.na)) + geom_col(color = &quot;blue&quot;, fill = &quot;lightblue&quot;) + scale_x_continuous(breaks = 1:36, labels = missing$CombinedDate) + ggtitle(&quot;Number of missing values by month&quot;) + xlab(&quot;&quot;) + ylab(&quot;Number of missing breeds&quot;) + theme(axis.text.x = element_text(angle = 90)) missing &lt;- processed_DogBite %&gt;% group_by(CombinedDate) %&gt;% summarise(sum.na = sum(is.na(ZipCode))) %&gt;% arrange(CombinedDate) ggplot(missing, aes(x = 1:36, y = sum.na)) + geom_col(color = &quot;blue&quot;, fill = &quot;lightblue&quot;) + scale_x_continuous(breaks = 1:36, labels = missing$CombinedDate) + ggtitle(&quot;Number of missing values by month&quot;) + xlab(&quot;&quot;) + ylab(&quot;Number of missing ZipCodes&quot;) + theme(axis.text.x = element_text(angle = 90)) For further analysis, we process our data and show the number of missing values by month, e.g., 2015-01, 2015-02. Note that we use the entire dataset instead of our 40 samples in this part for better discussion. We use three plots to show the situations of “Age”, “Breed”, and “ZipCode” separately. We could see that from 2015 to 2017, the number of missing values gradually decreased in total (especially for “Breed”). In addition, the plot has the periodicity, and the number of missing values increases in summer of each year. However, we are not sure whether this is due to the optimization of management and particularity of summer, or because the data quantity. Thus, we show the proportion of missing values by month then. missing &lt;- processed_DogBite %&gt;% group_by(CombinedDate) %&gt;% summarise(num_bites = n(), sum.na = sum(is.na(Age))) %&gt;% mutate(percent_na = sum.na/num_bites) %&gt;% arrange(CombinedDate) ggplot(missing, aes(x = 1:36, y = percent_na)) + geom_point() + scale_x_continuous(breaks = 1:36, labels = missing$CombinedDate) + ggtitle(&quot;Proportion of missing values by month&quot;) + xlab(&quot;&quot;) + ylab(&quot;Proportion of missing ages&quot;) + theme(axis.text.x = element_text(angle = 90)) missing &lt;- processed_DogBite %&gt;% group_by(CombinedDate) %&gt;% summarise(num_bites = n(), sum.na = sum(is.na(Breed))) %&gt;% mutate(percent_na = sum.na/num_bites) %&gt;% arrange(CombinedDate) ggplot(missing, aes(x = 1:36, y = percent_na)) + geom_point() + scale_x_continuous(breaks = 1:36, labels = missing$CombinedDate) + ggtitle(&quot;Proportion of missing values by month&quot;) + xlab(&quot;&quot;) + ylab(&quot;Proportion of missing breeds&quot;) + theme(axis.text.x = element_text(angle = 90)) missing &lt;- processed_DogBite %&gt;% group_by(CombinedDate) %&gt;% summarise(num_bites = n(), sum.na = sum(is.na(ZipCode))) %&gt;% mutate(percent_na = sum.na/num_bites) %&gt;% arrange(CombinedDate) ggplot(missing, aes(x = 1:36, y = percent_na)) + geom_point() + scale_x_continuous(breaks = 1:36, labels = missing$CombinedDate) + ggtitle(&quot;Proportion of missing values by month&quot;) + xlab(&quot;&quot;) + ylab(&quot;Proportion of missing ZipCodes&quot;) + theme(axis.text.x = element_text(angle = 90)) We found that in the proportion of missing values by month, it is clear that as time goes on, the proportion of missing value has a decreasing trend. One possible reason is that the government has strengthened its management of dog bites and put forward higher requirements for data integrity. In addition, the plot has the periodicity, and the proportion of missing values increases in summer of each year. We do not know the reason now. We will further analyze the time series in our final project to try to solve this problem. "],["results.html", "Chapter 5 Results", " Chapter 5 Results "],["interactive-component.html", "Chapter 6 Interactive component", " Chapter 6 Interactive component "],["conclusion.html", "Chapter 7 Conclusion", " Chapter 7 Conclusion "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
